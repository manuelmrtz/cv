<?xml version="1.0" encoding="utf-8"?>
<jnlp codebase="http://xtremehonda.pointto.us:8040/Bin/">
  <information>
    <title>ScreenConnect Client</title>
    <vendor>ScreenConnect Software</vendor>
    <icon href="ClientIcon.axd?Icon=ApplicationIcon48" />
    <icon kind="splash" href="ClientIcon.axd?Icon=ApplicationIcon256" />
  </information>
  <security>
    <all-permissions />
  </security>
  <update check="always" policy="always" />
  <application-desc>
    <argument>?h=xtremehonda.pointto.us&amp;p=8041&amp;k=BgIAAACkAABSU0ExAAgAABEAAABfsw%2B2a5OjcCepaDn0YFNq%2B3T0xNQjzWwRi7KCKK0IeopPhOLYUBlseqv%2BqccoQk3IVuZqdtfx488wjFRm%2BmPyEII39yrxycsoCPENyV0UxQrEniXSV4yqYF5OkvmpYc99XI7bBeELQbOCXKSp7gj%2B%2F30Q78QI%2FUgrrTqLystSSGObPhjXqkuo6g7yVjR06YOMHg%2Fvl54WhLey8T3xJ62QT04zv1w9p%2BGmE3nmjbG9nbXFgvpmb%2B%2FOemiL1mlHsvE6N1PdPxfmid3W%2BlwPVrDE5nJ6VcXXf7WdTM6RI3fBs6I22WekEvxoXJ9m9yJoia4jfOKqnolkB5qenItb7JDO&amp;s=f0bd8766-7664-4e30-a4ff-50d5c3933b00&amp;i=PEN%20-%20POS02&amp;e=Access&amp;y=Host&amp;n=3p7crwIKbWFudWVsbXJ0evvvA7SyNT%2FXkU%2FtWE7gixSbrtvzNVX0EtOmkJfMnHgZcwKO</argument>
  </application-desc>
  <resources>
    <j2se version="1.5+" initial-heap-size="32m" max-heap-size="512m" />
    <jar href="ScreenConnect.Client.jar" version="6.0.11622.6115" />
    <jar href="ScreenConnect.Core.jar" version="6.0.11622.6115" />
    <property name="apple.laf.useScreenMenuBar" value="true" />
    <property name="com.apple.macos.useScreenMenuBar" value="true" />
    <property name="com.apple.macos.use-file-dialog-packages" value="true" />
    <property name="jnlp.screenconnect.attachments" value="Client_en.properties,base64:Q29udHJvbFBhbmVsU3VzcGVuZE15SW5wdXRUaXRsZT1TdXNwZW5kIE15IElucHV0CkNvbW1hbmRTZWxlY3RBbm5vdGF0aW9uTW9kZUhvc3REcmF3PUhvc3QgRHJhdwpDb21tYW5kU2VsZWN0SGVscGVySGlnaGxpZ2h0VG9vbENyb3NzPUNyb3NzClJlYm9vdFJlYm9vdEJ1dHRvblRleHQ9UmVib290CkNvbnRyb2xQYW5lbFJlY2VpdmVGaWxlc1RpdGxlPVJlY2VpdmUgRmlsZXMKQ29udHJvbFBhbmVsTWFuYWdlQ3JlZGVudGlhbHNUaXRsZT1NYW5hZ2UgQ3JlZGVudGlhbHMKQ2xvc2VFbmRCdXR0b25UZXh0PUVuZCB0aGUgU2Vzc2lvbgpBcHBsaWNhdGlvblRpdGxlQ2xpZW50Rm9ybWF0PSUxJHMgQ2xpZW50CkNvbnRyb2xQYW5lbFJlY2VpdmVTb3VuZERlc2NyaXB0aW9uPVJlY2VpdmUgc291bmQgcGxheWluZyB0aHJvdWdoIHRoZSBzcGVha2VycyBvZiB0aGUgcmVtb3RlIG1hY2hpbmUuCkNvbnRyb2xQYW5lbE11dGVNaWNyb3Bob25lVGl0bGU9TXV0ZSBNaWNyb3Bob25lClN0YXR1c1BhbmVsTWVzc2FnZXNSZWNlaXZlZExhYmVsVGV4dD1NZXNzYWdlcyBSZWNlaXZlZApDb25zZW50SG9zdFRpbWVvdXRMYWJlbEZvcm1hdD1Zb3VyIGhvc3QgJyUxJHMnIHdvdWxkIGxpa2UgcmVtb3RlIGNvbnRyb2wgb2YgeW91ciBjb21wdXRlci4gWW91ciBjb25zZW50IGlzIHJlcXVpcmVkIHRvIHByb2NlZWQuIChBdXRvbWF0aWNhbGx5IGFjY2VwdGluZyBpbiAlMiRzIHNlY29uZHMpCkNvbnRyb2xQYW5lbFN0YXR1c1RpdGxlPVN0YXR1cwpDb250cm9sUGFuZWxWaWV3VGl0bGU9VmlldwpDb250cm9sUGFuZWxDb250cm9sU2hhcmluZ1RpdGxlPUNvbnRyb2wgU2hhcmluZwpDb21tYW5kQmxvY2tHdWVzdElucHV0VHJ1ZT1CbG9jawpFbmRQb2ludFN0YXR1c1dhaXRpbmdGb3JDb25zZW50RGVzY3JpcHRpb249VGhpcyBzZXNzaW9uIHJlcXVpcmVzIGNvbnNlbnQgYmVmb3JlIHlvdSBjYW4gdGFrZSByZW1vdGUgY29udHJvbC4gVGhlIHJlbW90ZSB1c2VyIGlzIGJlaW5nIHByb21wdGVkIGZvciBjb25zZW50LiBZb3UgY2FuIGNoYXQgd2l0aCB0aGUgdXNlciBmb3IgZ3VpZGFuY2UuCkNvbnRyb2xQYW5lbE1hbmFnZVNoYXJlZFRvb2xib3hEZXNjcmlwdGlvbj1NYW5hZ2UgdGhlIHRvb2xib3ggbG9jYXRlZCBvbiB0aGUgY2VudHJhbCBzZXJ2ZXIuCkNvbnRyb2xQYW5lbEFjcXVpcmVXYWtlTG9ja1RpdGxlPUFjcXVpcmUgV2FrZSBMb2NrCkNvbnRyb2xQYW5lbFNlbGVjdExvZ29uU2Vzc2lvblRpdGxlPVNlbGVjdCBMb2dvbiBTZXNzaW9uClRvb2xib3hMb2FkaW5nTWVzc2FnZT1Mb2FkaW5nLi4uClVwZ3JhZGVVcGdyYWRlQnV0dG9uVGV4dD1VcGdyYWRlClRvb2xib3hGb3JtRGVsZXRlVGV4dD1EZWxldGUKQmxhbmtNb25pdG9yTWVzc2FnZUZvcm1hdD0lMSRzCkNvbnRyb2xQYW5lbEFjcXVpcmVXYWtlTG9ja0Rlc2NyaXB0aW9uPVByZXZlbnQgc2xlZXAsIGF1dG8tbG9ja2luZywgc2NyZWVuIHNhdmVycywgYW5kIGluYWN0aXZpdHkgZGlzY29ubmVjdGlvbiB3aGlsZSB5b3UncmUgaWRsZS4KQ3JlZGVudGlhbHNSdW5TZXJ2aWNlV2FybmluZ1RleHQ9V0FSTklORzogSWYgV2luZG93cyBVQUMgaXMgZW5hYmxlZCwgeW91IHdpbGwgdGVtcG9yYXJpbHkgbG9zZSBjb250cm9sIHdoaWxlIEd1ZXN0ICBpcyBwcm9tcHRlZCAoWWVzL05vKSBmb3IgZWxldmF0aW9uLgpDb250cm9sUGFuZWxNYW5hZ2VDcmVkZW50aWFsc0Rlc2NyaXB0aW9uPVN0b3JlIGNyZWRlbnRpYWxzIHRvIGVudGVyIG9uIHRoZSBsb2dvbiBzY3JlZW4gbGF0ZXIuCkNvbW1hbmRWaWRlb1BhdXNlPVBhdXNlCkNvbnRyb2xQYW5lbFNvdW5kVGl0bGU9U291bmQKU3RhdHVzUGFuZWxDb25uZWN0aW9uU3RhdHVzTGFiZWxUZXh0PUNvbm5lY3Rpb24gU3RhdHVzClNlc3Npb25JbnZhbGlkU2Vzc2lvbkVuZGVkQnV0dG9uMlVybD0KQ29tbWFuZFN1c3BlbmRNeUlucHV0VHJ1ZT1TdXNwZW5kClByb3h5U2VydmVyU3BlY2lmeVRpdGxlRm9ybWF0PSUxJHMgLSBTcGVjaWZ5IFByb3h5IFNlcnZlcgpTZXNzaW9uSW52YWxpZFNlc3Npb25FbmRlZEJ1dHRvbjNVcmw9CkNvbnRyb2xQYW5lbFNlbGVjdFNvdW5kQ2FwdHVyZU1vZGVEZXNjcmlwdGlvbj1DaG9vc2UgdGhlIHNvdW5kIGNhcHR1cmUgbW9kZSBmb3IgdGhlIHNlc3Npb24uCkNvbW1hbmRTZW5kU3lzdGVtS2V5Q29kZT1TZW5kIEN0cmwtQWx0LURlbApDb21tYW5kU3BlY2lmeVByb3h5U2VydmVyPVNwZWNpZnkgUHJveHkgU2VydmVyLi4uCkNvbW1hbmRTZWxlY3RBbm5vdGF0aW9uTW9kZVZpZXdPbmx5PVZpZXcgT25seQpDb250cm9sUGFuZWxab29tVGl0bGU9Wm9vbQpDb250cm9sUGFuZWxSZWNvcmRWaWRlb0Rlc2NyaXB0aW9uPUNhcHR1cmUgbW90aW9uIHZpZGVvIHRvIGFuIEFWSSBmaWxlIG9uIHlvdXIgbWFjaGluZS4KQ29udHJvbFBhbmVsU2VsZWN0TWljcm9waG9uZURlc2NyaXB0aW9uPUNob29zZSB0aGUgbWljcm9waG9uZSB0byB1c2UgZm9yIHZvaWNlLgpTZXNzaW9uSW52YWxpZFNlc3Npb25FbmRlZEJ1dHRvbjFVcmw9CkNvbnRyb2xQYW5lbE1hbmFnZVBlcnNvbmFsVG9vbGJveFRpdGxlPU1hbmFnZSBQZXJzb25hbCBUb29sYm94CkNvbnRyb2xQYW5lbFNlbGVjdEFubm90YXRpb25TdHJva2VUaGlja25lc3NUaXRsZT1TZWxlY3QgU3Ryb2tlIFRoaWNrbmVzcwpFbmRQb2ludFN0YXR1c0Nvbm5lY3RpbmdUaXRsZT1Db25uZWN0aW5nLi4uClRyYXlMaW5rMlRleHQ9CkNvbnRyb2xQYW5lbEhlbHBlclRpdGxlPUhlbHBlcgpDb21tYW5kQWNxdWlyZVdha2VMb2NrRmFsc2U9UmVsZWFzZQpDb25zb2xlUmVxdWlyZWRCdXR0b25UZXh0PU9LCkVuZFBvaW50U3RhdHVzV2FpdGluZ0ZvckNhcHR1cmVEZXNjcmlwdGlvbj1Zb3UgaGF2ZSBzdWNjZXNzZnVsbHkgY29ubmVjdGVkIHRvIHRoZSBzZXNzaW9uLCBidXQgc2NyZWVuIHNoYXJpbmcgaGFzIG5vdCBiZWd1bi4KQ29tbWFuZEJsYW5rR3Vlc3RNb25pdG9yRmFsc2U9VW5ibGFuawpDb21tYW5kT3Blbj1PcGVuClRyYXlMaW5rM1RleHQ9CkNvbW1hbmRTZWxlY3RNb25pdG9yPVNlbGVjdCBNb25pdG9yKHMpCkNvbW1hbmRNYW5hZ2VTaGFyZWRUb29sYm94PU1hbmFnZQpDb21tYW5kTXV0ZU1pY3JvcGhvbmVUcnVlPU11dGUKVHJheUxpbmszVXJsPQpDb21tYW5kU2VsZWN0QW5ub3RhdGlvblN0cm9rZVRoaWNrbmVzc1RoaW49VGhpbgpDb250cm9sUGFuZWxFbmFibGVDbGlwYm9hcmRIZWxwVGl0bGU9RW5hYmxlIENsaXBib2FyZCBIZWxwClRyYXlMaW5rNFRleHQ9Ck1lc3NhZ2VzVHlwaW5nRm9ybWF0PSUxJHMgaXMgdHlwaW5nLi4uCkNvbnRyb2xQYW5lbFNlbmRGaWxlc1RpdGxlPVNlbmQgRmlsZXMKQ3JlZGVudGlhbHNSdW5TZXJ2aWNlSW5zdHJ1Y3Rpb25UZXh0PVNlcnZpY2UgbW9kZSByZXF1aXJlZCBmb3IgdGhpcyBvcGVyYXRpb24uIFBsZWFzZSBlbnRlciBhZG1pbmlzdHJhdGl2ZSBjcmVkZW50aWFscyB0byBlbGV2YXRlIGludG8gc2VydmljZSBtb2RlLgpDb250cm9sUGFuZWxTaGFyZVRpdGxlPVNoYXJpbmcKQ29uc2VudEhvc3RMYWJlbEZvcm1hdD1Zb3VyIGhvc3QgJyUxJHMnIHdvdWxkIGxpa2UgcmVtb3RlIGNvbnRyb2wgb2YgeW91ciBjb21wdXRlci4gWW91ciBjb25zZW50IGlzIHJlcXVpcmVkIHRvIHByb2NlZWQuCkNvbW1hbmRSZXF1ZXN0UGFydGljaXBhbnRTaGFyZT1SZXF1ZXN0IFNoYXJlIERlc2t0b3AKQ29tbWFuZE1hbmFnZUNyZWRlbnRpYWxzUHJvbXB0Rm9yU3RvcmFnZT1Qcm9tcHQgRm9yIFN0b3JhZ2UKQ3JlZGVudGlhbHNDYW5jZWxCdXR0b25UZXh0PUNhbmNlbApDb25zZW50SG9zdFRpdGxlRm9ybWF0PSUxJHMgLSBSZW1vdGUgQ29udHJvbCBDb25zZW50Ck1hY1JlaW5zdGFsbFVuaW5zdGFsbFByb21wdEZvcm1hdD1QbGVhc2UgZW50ZXIgeW91ciBwYXNzd29yZCB0byBhbGxvdyB0aGUgJTEkcyBjbGllbnQgdG8gcmVpbnN0YWxsIG9yIHVuaW5zdGFsbC4KRW5kUG9pbnRTdGF0dXNTbGVlcGluZ0ZvckZyZWVMaWNlbnNlVGl0bGU9V2FpdGluZyBmb3IgZnJlZSBsaWNlbnNlLi4uCkNvbW1hbmRVbnNoYXJlTXlEZXNrdG9wSG9zdD1DYW5jZWwKQ29tbWFuZFJlY2VpdmVGaWxlcz1SZWNlaXZlIEZpbGVzLi4uCkNsb3NlVGl0bGVGb3JtYXQ9JTEkcyAtIEV4aXQgQXBwbGljYXRpb24KQ29udHJvbFBhbmVsVmlld01pY3JvcGhvbmVMZXZlbFRpdGxlPU1pY3JvcGhvbmUgTGV2ZWwKQ29udHJvbFBhbmVsU2VsZWN0U291bmRDYXB0dXJlTW9kZVRpdGxlPVNlbGVjdCBNb2RlCkNvbW1hbmRUYWtlU2NyZWVuc2hvdFRvQ2xpcGJvYXJkPVRvIENsaXBib2FyZApDb21tYW5kU2VsZWN0U291bmRDYXB0dXJlTW9kZVNwZWFrZXJzPVNwZWFrZXJzCkNvbnRyb2xQYW5lbFNldFNwZWFrZXJzVm9sdW1lRGVzY3JpcHRpb249U2V0IHRoZSBsZXZlbCBvZiBzb3VuZCBmb3IgcGFydGljaXBhbnQgdm9pY2VzIGFuZCByZW1vdGUgc3BlYWtlcnMuCkNoYXRUaXRsZUZvcm1hdD0lMSRzIENoYXQKVW5kZXJDb250cm9sQmFubmVyVGV4dEZvcm1hdD1Zb3VyIGNvbXB1dGVyIGlzIGJlaW5nIGNvbnRyb2xsZWQgYnkgJTEkcwpFbmRQb2ludFN0YXR1c05lZ290aWF0aW5nVGl0bGU9TmVnb3RpYXRpbmcuLi4KQ29udHJvbFBhbmVsTWVzc2FnZXNUaXRsZT1NZXNzYWdlcwpDb21tYW5kU2VsZWN0UXVhbGl0eU1lZGl1bT1NZWRpdW0KQ29tbWFuZFNlbGVjdFNvdW5kQ2FwdHVyZU1vZGVBbGxNaWNyb3Bob25lcz1BbGwgTWljcwpFbmRQb2ludFN0YXR1c1JlZnVzZWRDb25zZW50RGVzY3JpcHRpb249VGhlIHJlbW90ZSB1c2VyIHJlZnVzZWQgY29uc2VudC4gWW91IGNhbiBjaGF0IHdpdGggdGhlIHJlbW90ZSB1c2VyIHRvIGRldGVybWluZSByZWFzb25pbmcuIFlvdSBjYW4gcmVsYXVjaCB0aGlzIHNlc3Npb24gdG8gcHJvbXB0IHRoZSB1c2VyIGFnYWluLgpDb250cm9sUGFuZWxTZWxlY3RTcGVha2Vyc0Rlc2NyaXB0aW9uPUNob29zZSB0aGUgc3BlYWtlcnMgdG8gdXNlIGZvciBwYXJ0aWNpcGFudCB2b2ljZXMgYW5kIHJlbW90ZSBzcGVha2Vycy4KQ29tbWFuZFZpZGVvU3RvcD1TdG9wClVwZ3JhZGVUaXRsZUZvcm1hdD0lMSRzIC0gVXBncmFkZSBBdmFpbGFibGUKQ29tbWFuZEV4aXQ9RXhpdApDb250cm9sUGFuZWxTZWxlY3RBbm5vdGF0aW9uU3Ryb2tlVGhpY2tuZXNzRGVzY3JpcHRpb249Q2hvb3NlIHRoZSBhbm5vdGF0aW9uIHN0cm9rZSB0aGlja25lc3MgdXNlZCBmb3IgeW91IHRvIGRyYXcgb24gdGhlIHNjcmVlbi4KU2hhcmVBbGxNb25pdG9yc1RleHQ9QWxsIE1vbml0b3JzCkNvbW1hbmRTaG93Q2hhdD1DaGF0CkNvbW1hbmRUb2dnbGVCbGFua0d1ZXN0TW9uaXRvcj1CbGFuayBHdWVzdCBNb25pdG9yClNlc3Npb25JbnZhbGlkVGl0bGVGb3JtYXQ9JTEkcyAtIEV4aXQgQXBwbGljYXRpb24KQ3JlZGVudGlhbHNVc2VyTmFtZUxhYmVsVGV4dD1Vc2VyIE5hbWU6ClNlc3Npb25JbnZhbGlkU2Vzc2lvbkVuZGVkQnV0dG9uMlRleHQ9CkNvbW1hbmRQYXVzZVNoYXJpbmdNeURlc2t0b3BGYWxzZT1SZXN1bWUKQ29tbWFuZE9wZW5Gb2xkZXI9T3BlbiBGb2xkZXIKQ29udHJvbFBhbmVsUmVjZWl2ZVNvdW5kVGl0bGU9UmVjZWl2ZSBTb3VuZApDcmVkZW50aWFsc1Bhc3N3b3JkTGFiZWxUZXh0PVBhc3N3b3JkOgpDb21tYW5kU3VzcGVuZE15SW5wdXRGYWxzZT1SZXN1bWUKQ29tbWFuZFRvZ2dsZUFsd2F5c09uVG9wPUFsd2F5cyBPbiBUb3AKRW5kUG9pbnRTdGF0dXNTdG9wcGVkVGl0bGU9U3RvcHBlZApDb250cm9sUGFuZWxUb29sYm94VGl0bGU9VG9vbGJveApDb250cm9sUGFuZWxDaGFuZ2VTaGFyaW5nVGl0bGU9Q2hhbmdlIFNoYXJpbmcKU2Vzc2lvbkludmFsaWRTZXNzaW9uRW5kZWRCdXR0b24zVGV4dD0KQ2xvc2VMZWF2ZU9wZW5CdXR0b25UZXh0PUxlYXZlIHRoZSBTZXNzaW9uIE9wZW4KU3RhdHVzUGFuZWxSZWxheVNlcnZlckxhYmVsVGV4dD1SZWxheSBTZXJ2ZXIKQ29udHJvbFBhbmVsU2V0U3BlYWtlcnNWb2x1bWVUaXRsZT1TZXQgU3BlYWtlcnMgVm9sdW1lCkNvbW1hbmRTZWxlY3RIZWxwZXJIaWdobGlnaHRUb29sSW5zdGFsbE1lc3NhZ2U9VGhlIHJlcXVpcmVkIGZlYXR1cmUgIldpbmRvd3MgVElGRiBJRmlsdGVyIiBpcyBub3QgY3VycmVudGx5IGVuYWJsZWQgaW4geW91ciBvcGVyYXRpbmcgc3lzdGVtLiBXaGF0IHdvdWxkIHlvdSBsaWtlIHRvIGRvPwpDb21tYW5kTXV0ZU1pY3JvcGhvbmVGYWxzZT1Vbm11dGUKQ29tbWFuZFNlbmRGb2xkZXI9U2VuZCBGb2xkZXIuLi4KQXBwbGljYXRpb25UaXRsZT1TY3JlZW5Db25uZWN0ClJlYm9vdENhbmNlbEJ1dHRvblRleHQ9Q2FuY2VsCkNvbW1hbmRTZWxlY3RBbm5vdGF0aW9uVG9vbExpbmU9TGluZQpDb250cm9sUGFuZWxBbm5vdGF0aW9uVGl0bGU9QW5ub3RhdGlvbgpDb250cm9sUGFuZWxUYWtlU2NyZWVuc2hvdFRpdGxlPVRha2UgU2NyZWVuc2hvdApDb250cm9sUGFuZWxTZWxlY3RBbm5vdGF0aW9uTW9kZURlc2NyaXB0aW9uPUNob29zZSB0aGUgYW5ub3RhdGlvbiBtb2RlIGZvciB0aGUgc2Vzc2lvbi4KQ29udHJvbFBhbmVsU2VsZWN0QW5ub3RhdGlvblRvb2xEZXNjcmlwdGlvbj1DaG9vc2UgdGhlIGFubm90YXRpb24gdG9vbCB1c2VkIGZvciB5b3UgdG8gZHJhdyBvbiB0aGUgc2NyZWVuLgpDb21tYW5kU2VuZENsaXBib2FyZEtleXN0cm9rZXM9U2VuZCBDbGlwYm9hcmQgS2V5c3Ryb2tlcwpDcmVkZW50aWFsc1Rlc3RCdXR0b25UZXh0PVRlc3QKQ3JlZGVudGlhbHNTdG9yZUluc3RydWN0aW9uVGV4dD1FbnRlciBjcmVkZW50aWFscyB0byBiZSBlbmNyeXB0ZWQgYW5kIHN0b3JlZC4gWW91ciBob3N0IGNhbiBzZW5kIHRoZXNlIGNyZWRlbnRpYWxzIHRvIHRoZSBzY3JlZW4gYXQgYW55IHRpbWUuXG5cblRoZSB1c2VyIG5hbWUgaXMgc2VudCB0byBub3JtYWwgdGV4dCBib3hlcy4gVGhlIHBhc3N3b3JkIGlzIHNlbnQgdG8gc3BlY2lhbCBwYXNzd29yZCB0ZXh0IGJveGVzLCBzbyB0aGUgcGFzc3dvcmQgaXMga2VwdCBzZWNyZXQuCkNvbnRyb2xQYW5lbENsaXBib2FyZEtleXN0cm9rZXNEZXNjcmlwdGlvbj1TZW5kIHlvdXIgY2xpcGJvYXJkIHRvIHRoZSByZW1vdGUgbWFjaGluZSBhcyBrZXlzdHJva2VzLiBVc2VmdWwgZm9yIGxvZ2luLgpDb21tYW5kUGF1c2VTaGFyaW5nTXlEZXNrdG9wVHJ1ZT1QYXVzZQpDcmVkZW50aWFsc1N0b3JlVGl0bGVGb3JtYXQ9JTEkcyAtIFN0b3JlIENyZWRlbnRpYWxzCkVuZFBvaW50U3RhdHVzV2FpdGluZ0ZvckNhcHR1cmVUaXRsZT1XYWl0aW5nIGZvciB5b3VyIHNjcmVlbiBzaGFyaW5nLi4uClN0YXR1c1BhbmVsU29mdHdhcmVWZXJzaW9uTGFiZWxUZXh0PVNvZnR3YXJlIFZlcnNpb24KQ29udHJvbFBhbmVsQmxhbmtHdWVzdE1vbml0b3JEZXNjcmlwdGlvbj1CbGFjayBvdXQgdGhlIHJlbW90ZSBtb25pdG9yIHNvIHRoZXkgY2FuJ3Qgc2VlIHdoYXQgeW91J3JlIGRvaW5nLgpDb250cm9sUGFuZWxTZWxlY3RNb25pdG9yc0Rlc2NyaXB0aW9uPUNob29zZSBvbmUgb3IgbW9yZSByZW1vdGUgbW9uaXRvcnMgdG8gdmlldy4KQ29udHJvbFBhbmVsU2VsZWN0UXVhbGl0eURlc2NyaXB0aW9uPUNob29zZSBhIGxvd2VyIHF1YWxpdHkgaWYgbmV0d29yayBjb25kaXRpb25zIGNyZWF0ZSBhIHNsb3cgY29ubmVjdGlvbi4KUmVib290TWVzc2FnZT1UaGlzIHdpbGwgc2VuZCBhIHJlYm9vdCBjb21tYW5kIHRvIHRoZSByZW1vdGUgbWFjaGluZS4gVGhlIGFwcGxpY2F0aW9uIHNob3VsZCByZWNvbm5lY3QgYWZ0ZXIgdGhlIHJlbW90ZSBtYWNoaW5lIGJvb3RzLlxuXG5Db250aW51ZT8KQ3JlZGVudGlhbHNTdWNjZXNzVGV4dD1TdWNjZXNzClNoYXJlQWxsb3dDb250cm9sTm9ib2R5VGV4dD1Eb24ndCBhbGxvdyBjb250cm9sIGZyb20gYW55b25lCkNvbW1hbmROb25lPShlbXB0eSkKQ29tbWFuZFNlbGVjdFF1YWxpdHlMb3c9TG93CkNyZWRlbnRpYWxzUnVuU2VydmljZUF1dGhlbnRpY2F0aW5nTWVzc2FnZT1BdXRoZW50aWNhdGluZy4uLgpDb21tYW5kU2VsZWN0QW5ub3RhdGlvbk1vZGVBbGxEcmF3PUFsbCBEcmF3CkNvbnRyb2xQYW5lbEJsb2NrR3Vlc3RJbnB1dFRpdGxlPUJsb2NrIEd1ZXN0IElucHV0ClRvb2xib3hFbXB0eU1lc3NhZ2U9WW91ciBUb29sYm94IGlzIGVtcHR5LiBHZXQgc3RhcnRlZCBhZGRpbmcgdG9vbHMgYnkgdXNpbmcgdGhlIG9wdGlvbnMgYmVsb3cuIFRoZSBUb29sYm94IHByb3ZpZGVzIHNpbmdsZSBjbGljayBhY2Nlc3MgdG8gdHJhbnNmZXIgYSBmaWxlIHRvIHRoZSByZW1vdGUgbWFjaGluZSBhbmQgcnVuIGl0IGluc3RhbnRseS4KTWVzc2FnZXNMYXN0TWVzc2FnZUZvcm1hdD1MYXN0IG1lc3NhZ2UgezA6dH0uClNlc3Npb25JbnZhbGlkU2Vzc2lvbkFjY2Vzc1Rva2VuSW52YWxpZE1lc3NhZ2U9WW91ciBzZXNzaW9uIGFjY2VzcyB0b2tlbiBoYXMgZXhwaXJlZCBvciBpcyBpbnZhbGlkLiBQbGVhc2UgcmVsYXVuY2ggdGhpcyBhcHBsaWNhdGlvbiB0byByZWZyZXNoIHRoZSB0b2tlbi4KQ29tbWFuZFNlbGVjdEFubm90YXRpb25TdHJva2VUaGlja25lc3NNZWRpdW09TWVkaXVtCkNvbW1hbmRTZWxlY3RIZWxwZXJIaWdobGlnaHRUb29sTm9uZT1Ob25lCkluZm9QYW5lbFNoYXJlR3Vlc3RUaXRsZT1TaGFyZSBEZXNrdG9wIFJlcXVlc3QKQ29tbWFuZFNlbGVjdEhlbHBlckhpZ2hsaWdodFRvb2xJbnN0YWxsVGl0bGU9V2luZG93cyBGZWF0dXJlIFJlcXVpcmVkCkNvbnRyb2xQYW5lbEJsYW5rR3Vlc3RNb25pdG9yVGl0bGU9QmxhbmsgR3Vlc3QgTW9uaXRvcgpFbmRQb2ludFN0YXR1c1NsZWVwaW5nRm9yRnJlZVNsb3REZXNjcmlwdGlvbj1Tb21lb25lIGlzIGFscmVhZHkgY29ubmVjdGVkIHRvIHRoZSBzZXNzaW9uIHdpdGggeW91ciBzZXNzaW9uIHJvbGUuIFRoaXMgd2lsbCB3YWl0IGEgZmV3IHNlY29uZHMgYW5kIHRoZW4gdHJ5IHRvIHJlY29ubmVjdC4KQ29udHJvbFBhbmVsU3VzcGVuZE15SW5wdXREZXNjcmlwdGlvbj1QcmV2ZW50IHlvdXIga2V5Ym9hcmQgYW5kIG1vdXNlIGZyb20gYWZmZWN0aW5nIHRoZSByZW1vdGUgbWFjaGluZS4KQ29tbWFuZFNlbmRGaWxlcz1TZW5kIEZpbGVzLi4uClNlc3Npb25JbnZhbGlkU2Vzc2lvbkVuZGVkTWVzc2FnZT1Zb3VyIGhvc3QgaGFzIGVuZGVkIHRoZSByZW1vdGUgc2Vzc2lvbi4gVGhpcyBhcHBsaWNhdGlvbiB3aWxsIG5vdyBjbG9zZS4KU2Vzc2lvbkludmFsaWRTZXNzaW9uRW5kZWRCdXR0b24xVGV4dD0KQ29tbWFuZFNlbGVjdFNvdW5kQ2FwdHVyZU1vZGVTaWxlbnQ9U2lsZW50CkNvbnRyb2xQYW5lbFNlbmRGaWxlc0Rlc2NyaXB0aW9uPVNlbmQgZmlsZXMgdG8gdGhlIHJlbW90ZSBtYWNoaW5lLiBDdXQvUGFzdGUgb3IgRHJhZy9Ecm9wIGFyZSBlYXNpZXIuClByb3h5U2VydmVyU3BlY2lmeUluc3RydWN0aW9uVGV4dD1TcGVjaWZ5IHlvdXIgcHJveHkgc2VydmVyIGFuZCBvcHRpb25hbCBjcmVkZW50aWFscy4gVGhlc2UgdmFsdWVzIHdpbGwgYmUgcHJlZmVycmVkIHdoZW4gY29ubmVjdGluZyB0byB5b3VyIHNlc3Npb24uIEhvd2V2ZXIsIG90aGVyIG1ldGhvZHMgc3VjaCBhcyBkaXJlY3QgY29ubmVjdGlvbiBhbmQgc3lzdGVtLXNwZWNpZmllZCBwcm94aWVzIG1heSBiZSB1c2VkIGluIGNvbm5lY3Rpb24gYXR0ZW1wdHMuClN0YXR1c1BhbmVsTWVzc2FnZXNTZW50TGFiZWxUZXh0PU1lc3NhZ2VzIFNlbnQKQ29udHJvbFBhbmVsU2VsZWN0SGVscFByb3ZpZGVyVGl0bGU9U2VsZWN0IFByb3ZpZGVyCkNvbW1hbmRTZWxlY3RBbm5vdGF0aW9uVG9vbEVsbGlwc2U9RWxsaXBzZQpDb250cm9sUGFuZWxTZWxlY3RBbm5vdGF0aW9uTW9kZVRpdGxlPVNlbGVjdCBNb2RlCkVuZFBvaW50U3RhdHVzV2FpdGluZ0Zvckd1ZXN0VGl0bGU9V2FpdGluZyBmb3IgeW91ciBndWVzdC4uLgpSZWNvcmRGaWxlTmFtZUZvcm1hdD0lMSRzXyUyJHNfezI6eXl5eS1NTS1kZH1fJTQkcy5hdmkKQ29udHJvbFBhbmVsU2VsZWN0SGVscGVySGlnaGxpZ2h0VG9vbERlc2NyaXB0aW9uPUNob29zZSB0aGUgdG9vbCB1c2VkIHRvIHNlbGVjdCBhIHJlZ2lvbiBvZiB0aGUgc2NyZWVuIGZvciBvcHRpY2FsIGNoYXJhY3RlciByZWNvZ25pdGlvbiAoT0NSKS4KQ29tbWFuZFJlY2VpdmVTb3VuZFRydWU9U3RhcnQgUmVjZWl2aW5nCkNvbnRyb2xQYW5lbFNjcmVlbkNhcHR1cmVUaXRsZT1TY3JlZW4gQ2FwdHVyZQpTZW5kRm9sZGVyRGlhbG9nRGVzY3JpcHRpb249UGxlYXNlIHNlbGVjdCB0aGUgZm9sZGVyIHRvIHNlbmQ6CkVuZFBvaW50U3RhdHVzV2FpdGluZ0Zvckhvc3RUaXRsZT1XYWl0aW5nIGZvciB5b3VyIGhvc3QuLi4KU2Vzc2lvbkludmFsaWRTZXNzaW9uRW5kZWRMYXVuY2hVcmw9CkNvbnRyb2xQYW5lbEVuYWJsZUNsaXBib2FyZEhlbHBEZXNjcmlwdGlvbj1FbmFibGUgY2xpcGJvYXJkIGhlbHAgZm9yIHRoZSBIZWxwZXIgdG8gcHJvY2VzcyBhbGwgY29waWVkIHRleHQuClNoYXJlTW9uaXRvckxhYmVsVGV4dD1Nb25pdG9yOgpDb21tYW5kU2hvd1N0YXR1cz1TdGF0dXMKU2F2ZVNjcmVlbkZpbGVOYW1lRm9ybWF0PSUxJHNfJTIkc197Mjp5eXl5LU1NLWRkfV8lNCRzLnBuZwpDb250cm9sUGFuZWxNYW5hZ2VSZWNlaXZlRm9sZGVyVGl0bGU9TWFuYWdlIFJlY2VpdmUgRm9sZGVyCkNvbW1hbmRTaGFyZU15RGVza3RvcEd1ZXN0PVN0YXJ0IFNoYXJpbmcKRW5kUG9pbnRTdGF0dXNXYWl0aW5nRm9yR3Vlc3REZXNjcmlwdGlvbj1Zb3UgaGF2ZSBzdWNjZXNzZnVsbHkgY29ubmVjdGVkIHRvIHRoZSBzZXNzaW9uLCBidXQgeW91ciBndWVzdCBoYXMgbm90IHlldCBjb25uZWN0ZWQuIFlvdXIgc2Vzc2lvbiB3aWxsIHN0YXJ0IHdoZW4gdGhleSBjb25uZWN0LgpDb25zZW50SG9zdFJlZnVzZUJ1dHRvblRleHQ9UmVmdXNlIENvbnRyb2wKQ3JlZGVudGlhbHNSdW5TZXJ2aWNlVGl0bGVGb3JtYXQ9JTEkcyAtIFJ1biBTZXJ2aWNlClNoYXJlQ29udHJvbExhYmVsVGV4dD1Db250cm9sCkNvbnRyb2xQYW5lbFNoYXJlTXlEZXNrdG9wVGl0bGU9U2hhcmUgTXkgRGVza3RvcApDb250cm9sUGFuZWxNdXRlTWljcm9waG9uZURlc2NyaXB0aW9uPVR1cm4gb2ZmIHlvdXIgbWljcm9waG9uZSB0byB0YWxrIHdpdGhvdXQgdHJhbnNtaXR0aW5nIHNvdW5kIHRvIG90aGVyIHBhcnRpY2lwYW50cy4KQ29tbWFuZEVuYWJsZUNsaXBib2FyZEhlbHBGYWxzZT1EaXNhYmxlCkNvbW1hbmRTZWxlY3RIZWxwZXJIaWdobGlnaHRUb29sSW5zdGFsbE5vPURvbid0IEVuYWJsZSB0aGUgRmVhdHVyZQpDb250cm9sUGFuZWxab29tRGVzY3JpcHRpb249Wm9vbSBpbiBvciBvdXQgdG8gb25lIG9mIHNldmVyYWwgcHJlc2V0IGxldmVscy4KQ29udHJvbFBhbmVsUmVib290VGl0bGU9UmVib290IGFuZCBSZWNvbm5lY3QKVXBncmFkZUNhbmNlbEJ1dHRvblRleHQ9Q2FuY2VsCkNvbW1hbmRTZWxlY3RIZWxwZXJIaWdobGlnaHRUb29sSW5zdGFsbFllcz1FbmFibGUgdGhlIEZlYXR1cmUKRW5kUG9pbnRTdGF0dXNTbGVlcGluZ0ZvclJldHJ5RGVzY3JpcHRpb249QW4gZXJyb3Igb2NjdXJyZWQgY29ubmVjdGluZyB0byB5b3VyIHNlc3Npb24uIFRoaXMgd2lsbCB3YWl0IGEgZmV3IHNlY29uZHMgYmVmb3JlIHRyeWluZyBhZ2Fpbi5cblxuRXJyb3I6ICUxJHMKRW5kUG9pbnRTdGF0dXNTbGVlcGluZ0ZvclJldHJ5VGl0bGU9V2FpdGluZyB0byByZXRyeS4uLgpDb250cm9sUGFuZWxTZWxlY3RBbm5vdGF0aW9uVG9vbFRpdGxlPVNlbGVjdCBUb29sCkNyZWRlbnRpYWxzRmFpbHVyZVRleHQ9SW52YWxpZCB1c2VyIG5hbWUgYW5kL29yIHBhc3N3b3JkCkNyZWRlbnRpYWxzT0tCdXR0b25UZXh0PU9LCkNvbW1hbmRIaWRlPUhpZGUKTWVzc2FnZXNUeXBlSGVyZVRleHQ9VHlwZSB5b3VyIG1lc3NhZ2UgaGVyZQpFbmRQb2ludFN0YXR1c1NsZWVwaW5nRm9yRnJlZVNsb3RUaXRsZT1XYWl0aW5nIGZvciBmcmVlIHNsb3QuLi4KQ2xvc2VQcm9tcHQ9V291bGQgeW91IGxpa2UgdG8gZW5kIHRoZSBzZXNzaW9uIHdoZW4gdGhpcyBhcHBsaWNhdGlvbiBjbG9zZXM/XG5cbkNsaWNrIFllcyB0byBlbmQgdGhlIHNlc3Npb24uXG5DbGljayBObyB0byBsZWF2ZSB0aGUgc2Vzc2lvbiBvcGVuIGZvciB5b3UgdG8gcmVqb2luIGxhdGVyLgpDbG9zZUNhbmNlbEJ1dHRvblRleHQ9Q2FuY2VsCkNvbnRyb2xQYW5lbFNlbGVjdFF1YWxpdHlUaXRsZT1TZWxlY3QgUXVhbGl0eQpDb250cm9sUGFuZWxTZWxlY3RIZWxwUHJvdmlkZXJEZXNjcmlwdGlvbj1DaG9vc2UgdGhlIGhlbHAgcHJvdmlkZXIgdG8gcmV0cmlldmUgc2VhcmNoIHJlc3VsdHMgb3Igb3RoZXIgaW5mb3JtYXRpb24uClNoYXJlZFRvb2xib3hUaXRsZUZvcm1hdD0lMSRzIFNoYXJlZCBUb29sYm94CkNvbW1hbmRSdW5Ub29sPVJ1biBUb29sCkNvbW1hbmRTZWxlY3RTb3VuZENhcHR1cmVNb2RlSG9zdE1pY3JvcGhvbmU9SG9zdCBNaWMKQ29tbWFuZFNlbGVjdEFubm90YXRpb25Nb2RlSW52aXNpYmxlPUludmlzaWJsZQpTZW5kRmlsZXNEaWFsb2dUaXRsZUZvcm1hdD0lMSRzIC0gU2VuZCBGaWxlcwpDb250cm9sUGFuZWxTZWxlY3RNaWNyb3Bob25lVGl0bGU9U2VsZWN0IE1pY3JvcGhvbmUKSGlkZGVuQXBwQmFsbG9vblRleHRUaXRsZUZvcm1hdD0lMSRzIGlzIHJ1bm5pbmcgaW4gdGhlIGJhY2tncm91bmQKQ29udHJvbFBhbmVsUmVjZWl2ZUZpbGVzRGVzY3JpcHRpb249U2VuZCBmaWxlcyB0byB5b3VyIG1hY2hpbmUuIEN1dC9QYXN0ZSBvciBEcmFnL0Ryb3AgYXJlIGVhc2llci4KQ29tbWFuZE1hbmFnZUNyZWRlbnRpYWxzU2VuZFRvU2NyZWVuPVNlbmQgVG8gU2NyZWVuClRyYXlMaW5rNFVybD0KU2hhcmVNb25pdG9yVGV4dEZvcm1hdD1Nb25pdG9yICUxJHMKQ29udHJvbFBhbmVsQ2xlYXJBbm5vdGF0aW9uc0Rlc2NyaXB0aW9uPUNsZWFyIGV2ZXJ5b25lJ3MgYW5ub3RhdGlvbnMgb24gdGhlIHNjcmVlbi4KQ29udHJvbFBhbmVsU2VsZWN0SGVscGVySGlnaGxpZ2h0VG9vbFRpdGxlPVNlbGVjdCBUb29sCkNvbW1hbmRTZW5kTWVzc2FnZT1TZW5kCkNvbnRyb2xQYW5lbFZpZXdNaWNyb3Bob25lTGV2ZWxEZXNjcmlwdGlvbj1WaWV3IHRoZSBsZXZlbCBjdXJyZW50bHkgY2FwdHVyZWQgZnJvbSB0aGUgbWljcm9waG9uZS4gQWRqdXN0IHRoZSBtaWNyb3Bob25lIHZvbHVtZSBpbiB5b3VyIG9wZXJhdGluZyBzeXN0ZW0uClRyYXlMaW5rMVRleHQ9CkNvbW1hbmRFbmFibGVDbGlwYm9hcmRIZWxwVHJ1ZT1FbmFibGUKQ29tbWFuZEFjcXVpcmVXYWtlTG9ja1RydWU9QWNxdWlyZQpDb250cm9sUGFuZWxCbG9ja0d1ZXN0SW5wdXREZXNjcmlwdGlvbj1QcmV2ZW50IHRoZSB1c2VyIGF0IHRoZSByZW1vdGUgbWFjaGluZSBmcm9tIGludGVyZmVyaW5nIHdpdGggeW91ciB3b3JrLgpUcmF5TGluazJVcmw9ClNlc3Npb25JbnZhbGlkU2Vzc2lvbkZvcmNlRGlzY29ubmVjdGVkTWVzc2FnZT1Zb3UgaGF2ZSBiZWVuIGRpc2Nvbm5lY3RlZCBmcm9tIHRoZSBzZXNzaW9uLgpTdGF0dXNQYW5lbExhc3RFcnJvck1lc3NhZ2VzTGFiZWxUZXh0PUxhc3QgRXJyb3IgTWVzc2FnZQpDb250cm9sUGFuZWxQYXJ0aWNpcGFudHNUaXRsZT1QYXJ0aWNpcGFudHMKRW5kUG9pbnRTdGF0dXNTbGVlcGluZ0ZvckZyZWVMaWNlbnNlRGVzY3JpcHRpb249WW91ciBpbnN0YWxsYXRpb24gaGFzIHJlYWNoZWQgdGhlIGxpbWl0IG9mIGNvbmN1cnJlbnQgc2Vzc2lvbnMgaXQgaXMgYWxsb3dlZC4gVGhpcyB3aWxsIGNvbnRpbnVlIHRvIHRyeSB0byByZWNvbm5lY3QgdW50aWwgYW4gYXZhaWxhYmxlIGxpY2Vuc2UgaXMgZnJlZS4KQ29tbWFuZFNlbGVjdFF1YWxpdHlIaWdoPUhpZ2gKUmVib290VGl0bGVGb3JtYXQ9JTEkcyAtIFJlYm9vdCBhbmQgUmVjb25uZWN0CkNvbW1hbmRTaGFyZU15RGVza3RvcEhvc3Q9U3RhcnQgU2hhcmluZwpFbmRQb2ludFN0YXR1c1dhaXRpbmdGb3JIb3N0RGVzY3JpcHRpb249WW91IGhhdmUgc3VjY2Vzc2Z1bGx5IGNvbm5lY3RlZCB0byB0aGUgc2Vzc2lvbiwgYnV0IHlvdXIgaG9zdCBoYXMgbm90IHlldCBjb25uZWN0ZWQuIFlvdXIgc2Vzc2lvbiB3aWxsIHN0YXJ0IHdoZW4gdGhleSBjb25uZWN0LgpDb250cm9sUGFuZWxNaXNjZWxsYW5lb3VzVGl0bGU9TWlzY2VsbGFuZW91cwpDb21tYW5kUmVzaGFyZU15RGVza3RvcD1SZXNoYXJlCkNvbW1hbmRPcGVuTW9uaXRvcj1PcGVuIE1vbml0b3IocykgaW4gTmV3IFdpbmRvdwpDb21tYW5kVW5zaGFyZU15RGVza3RvcEd1ZXN0PURlbnkgU2hhcmUgUmVxdWVzdApVcGdyYWRlUHJvbXB0PUEgbmV3IHZlcnNpb24gb2YgdGhlICUxJHMgY2xpZW50IGlzIGF2YWlsYWJsZSAoJTIkcykuIFVwZ3JhZGUgbm93PwpUcmF5TGluazFVcmw9CkNvbnRyb2xQYW5lbFNoYXJlTXlEZXNrdG9wRGVzY3JpcHRpb249UmV2ZXJzZSB0aGUgc2hhcmluZyBhbmQgc2hhcmUgYWxsIG9yIHBhcnQgb2YgeW91ciBvd24gZGVza3RvcC4KQ29tbWFuZFNoYXJlTXlEZXNrdG9wPVNoYXJlIE15IERlc2t0b3AKSW5mb1BhbmVsU3RhdHVzVGl0bGVUZXh0PVN0YXR1cwpDb250cm9sUGFuZWxTZWxlY3RTcGVha2Vyc1RpdGxlPVNlbGVjdCBTcGVha2VycwpDb21tYW5kUmVib290VG9Ob3JtYWxNb2RlPVRvIE5vcm1hbCBNb2RlCkNvbnRyb2xQYW5lbENsZWFyQW5ub3RhdGlvbnNUaXRsZT1DbGVhciBBbm5vdGF0aW9ucwpDb21tYW5kQmxhbmtHdWVzdE1vbml0b3JUcnVlPUJsYW5rClNoYXJlU2hhcmVMYWJlbFRleHQ9U2hhcmUKUHJveHlTZXJ2ZXJTcGVjaWZ5U3RvcmluZ01lc3NhZ2U9U3RvcmluZy4uLgpDb250cm9sUGFuZWxGaWxlVHJhbnNmZXJUaXRsZT1GaWxlIFRyYW5zZmVyCkNvbnNvbGVSZXF1aXJlZFN5c3RlbUtleUNvZGVUaXRsZUZvcm1hdD0lMSRzIC0gQ29uc29sZSBTZXNzaW9uIFJlcXVpcmVkCkNvbnRyb2xQYW5lbFRha2VTY3JlZW5zaG90RGVzY3JpcHRpb249R3JhYiBhIHN0aWxsIGltYWdlIG9mIHRoZSByZW1vdGUgbWFjaGluZSBkZXNrdG9wLgpTdGF0dXNUaXRsZUZvcm1hdD0lMSRzIFN0YXR1cwpIaWRkZW5BcHBCYWxsb29uVGl0bGU9U3RpbGwgZ29pbmcuLi4KVG9vbGJveEZvcm1SZW5hbWVUZXh0PVJlbmFtZQpDb21tYW5kUmVjZWl2ZVNvdW5kRmFsc2U9U3RvcCBSZWNlaXZpbmcKQ29tbWFuZFJlYm9vdFRvU2FmZU1vZGU9VG8gU2FmZSBNb2RlCkNvbnRyb2xQYW5lbFNlbGVjdE1vbml0b3JzVGl0bGU9U2VsZWN0IE1vbml0b3JzCkNvbW1hbmRTZWxlY3RBbm5vdGF0aW9uU3Ryb2tlVGhpY2tuZXNzVGhpY2s9VGhpY2sKQ29tbWFuZEJsb2NrR3Vlc3RJbnB1dEZhbHNlPVVuYmxvY2sKQ29tbWFuZFJ1blRvb2xFbGV2YXRlZD1SdW4gVG9vbCBFbGV2YXRlZApDb21tYW5kVG9nZ2xlU3VzcGVuZE15SW5wdXQ9U3VzcGVuZCBNeSBJbnB1dApDb25zb2xlUmVxdWlyZWRTeXN0ZW1LZXlDb2RlTWVzc2FnZT1UaGUgY29uc29sZSBzZXNzaW9uIGlzIHJlcXVpcmVkIHRvIHNlbmQgdGhlIHN5c3RlbSBrZXkgY29kZS4gIEN1cnJlbnRseSB5b3UgYXJlIG9uIGEgdGVybWluYWwgc2VydmljZXMgc2Vzc2lvbi4KQ29tbWFuZFJlY2VpdmVGb2xkZXI9UmVjZWl2ZSBGb2xkZXIuLi4KQ29tbWFuZENsZWFyQW5ub3RhdGlvbnM9Q2xlYXIKQ3JlZGVudGlhbHNTdG9yZVN0b3JpbmdNZXNzYWdlPVN0b3JpbmcuLi4KVG9vbGJveEZvcm1OZXdEaXJlY3RvcnlUZXh0PU5ldyBEaXJlY3RvcnkKUHJveHlTZXJ2ZXJTcGVjaWZ5UmVhbG1MYWJlbFRleHQ9UHJveHkgU2VydmVyOgpJbmZvUGFuZWxTaGFyZUhvc3RUaXRsZT1TaGFyZSBNeSBEZXNrdG9wCkNvbW1hbmRTZWxlY3RBbm5vdGF0aW9uVG9vbFBlbj1QZW4KU2hhcmVBcHBsaWNhdGlvbkxhYmVsVGV4dD1BcHBsaWNhdGlvbjoKQ29udHJvbFBhbmVsU3lzdGVtS2V5Q29kZURlc2NyaXB0aW9uPVNlbmQgQ3RybC1BbHQtRGVsIG9yIGFuIGVxdWl2YWxlbnQga2V5IGNvZGUgdG8gdGhlIHJlbW90ZSBtYWNoaW5lLgpFbmRQb2ludFN0YXR1c0Nvbm5lY3RlZFRpdGxlPUNvbm5lY3RlZApDb250cm9sUGFuZWxDbGlwYm9hcmRLZXlzdHJva2VzVGl0bGU9U2VuZCBDbGlwYm9hcmQgS2V5c3Ryb2tlcwpDb21tYW5kVmlkZW9SZWNvcmQ9UmVjb3JkCkNvbW1hbmRTZWxlY3RIZWxwZXJIaWdobGlnaHRUb29sTGFzc289TGFzc28KRW5kUG9pbnRTdGF0dXNSZWZ1c2VkQ29uc2VudFRpdGxlPUNvbnNlbnQgUmVmdXNlZApFbmRQb2ludFN0YXR1c1dhaXRpbmdGb3JDb25zZW50VGl0bGU9V2FpdGluZyBmb3IgY29uc2VudC4uLgpDb25zZW50SG9zdENvbnNlbnRCdXR0b25UZXh0PUNvbnNlbnQgdG8gQ29udHJvbApUb29sYm94Rm9ybVVwbG9hZEZpbGVzVGV4dD1VcGxvYWQgRmlsZShzKQpDb21tYW5kQ2hhbmdlRm9sZGVyPUNoYW5nZSBGb2xkZXIKQ29tbWFuZFRvZ2dsZUJsb2NrR3Vlc3RJbnB1dD1CbG9jayBHdWVzdCBJbnB1dApDb250cm9sUGFuZWxSZWJvb3REZXNjcmlwdGlvbj1TZW5kIHJlYm9vdCBjb21tYW5kIHRvIHJlbW90ZSBtYWNoaW5lIGFuZCByZWNvbm5lY3QgYWZ0ZXJ3YXJkcy4KR3Vlc3RBbm9ueW1vdXNOYW1lPUd1ZXN0ClNlc3Npb25JbnZhbGlkQnV0dG9uMVRleHQ9T0sKQ29udHJvbFBhbmVsTWFuYWdlQ2FwdHVyZUZvbGRlclRpdGxlPU1hbmFnZSBDYXB0dXJlIEZvbGRlcgpDb250cm9sUGFuZWxSZWNvcmRWaWRlb1RpdGxlPVJlY29yZCBWaWRlbwpDb21tYW5kVG9nZ2xlUmVjZWl2ZVNvdW5kPVJlY2VpdmUgU291bmQKU3RhdHVzUGFuZWxUaW1lQ29ubmVjdGVkTGFiZWxUZXh0PVRpbWUgQ29ubmVjdGVkCkNoYW5nZUZvbGRlckRpYWxvZ0Rlc2NyaXB0aW9uPVBsZWFzZSBzZWxlY3QgdGhlIG5ldyBmb2xkZXI6CkNvbW1hbmREaXNjb25uZWN0UGFydGljaXBhbnQ9RGlzY29ubmVjdApTaGFyZUFsbG93Q29udHJvbEV2ZXJ5Ym9keVRleHQ9QWxsb3cgY29udHJvbCBmcm9tIGV2ZXJ5b25lCkNvbW1hbmRUb2dnbGVCZWVwT25Db25uZWN0PUJlZXAgT24gQ29ubmVjdApDb21tYW5kU3RvcFBhcnRpY2lwYW50U2hhcmU9U3RvcCBTaGFyZSBEZXNrdG9wCkNvbW1hbmRUYWtlU2NyZWVuc2hvdFRvRmlsZT1UbyBGaWxlCkNvbW1hbmRVbnNoYXJlTXlEZXNrdG9wPVVuc2hhcmUKQ29udHJvbFBhbmVsU2VsZWN0TG9nb25TZXNzaW9uRGVzY3JpcHRpb249Q2hvb3NlIHdoaWNoIGxvZ29uIHNlc3Npb24gdG8gY29udHJvbCBvbiB0aGUgcmVtb3RlIG1hY2hpbmUuCkNvbnRyb2xQYW5lbFN5c3RlbUtleUNvZGVUaXRsZT1TZW5kIEN0cmwtQWx0LURlbApPcGVyYXRpb25Ob3RTdXBwb3J0ZWRNZXNzYWdlRm9ybWF0PU9wZXJhdGlvbiAnJTEkcycgbm90IHN1cHBvcnRlZC4KVG9vbGJveEZvcm1VcGxvYWREaXJlY3RvcnlUZXh0PVVwbG9hZCBEaXJlY3RvcnkKQ29tbWFuZFNlbGVjdEFubm90YXRpb25Ub29sUmVjdGFuZ2xlPVJlY3RhbmdsZQpDb250cm9sUGFuZWxNYW5hZ2VTaGFyZWRUb29sYm94VGl0bGU9TWFuYWdlIFNoYXJlZCBUb29sYm94Cg==;Client.properties,base64:" />
  </resources>
</jnlp>